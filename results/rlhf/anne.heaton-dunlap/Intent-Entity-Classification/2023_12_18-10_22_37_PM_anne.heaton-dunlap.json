[{"role": "context", "content": "Inquiry Classes:\nOR95JRT => Questions about the employee referral program, referral bonus and referring colleagues for job opportunities. Not applicable to consultants.\nOR89FRT => Inquiry regarding W-4 form and tax withholdings. Not for international employees.\nOR37KRT => Questions about involuntary termination of a job or employee, workforce reduction, voluntary resignation, final salary payouts, or recovery of terminated employee's assets.\nOR27BRT => Inquiry regarding the Adoption Reimbursement program.\nOR37ART => Inquiry regarding the Tuition Reimbursement program. Not available for graduate programs.\n\nInquiry Entities:\ntaxForm => W-4, W-2\nemployeeNumber => \\b\\d{6}\\b\nemployeeRelative => son, daughter\n\n\nCreating your first schema\nJSON Schema is a vocabulary that you can use to annotate and validate JSON documents. \n\nOverview\nThis example is a product catalog that stores its data using JSON objects, like the following:\n\ndata\n{\n  \"productId\": 1,\n  \"productName\": \"A green door\",\n  \"price\": 12.50,\n  \"tags\": [ \"home\", \"green\" ]\n}\nEach product in the catalog has:\n\nproductId: an identifier for the product\nproductName: the product name\nprice: the cost to the consumer\ntags: an optional array of identifying tags\n\nThe JSON object is human-readable, but it doesn\u2019t include any context or metadata. There\u2019s no way to tell from looking at the object what the keys mean or what the possible inputs are."}, {"role": "user", "content": "My adopted son has just finished taking some college courses.  Is that something my family could get financial help with?  If yes, do we need to adjust anything on our tax forms. Do we need to adjust any of our withholdings?  If you can't help me can you give me a referral for an tax expert?\n\nIdentify the applicable inquiry classes and inquiry entities for the above request. Return the results in a json.", "tags": ["response_bad_incomplete", "response_bad_incorrect", "response_bad_hallucination", "prompt_complex", "output_JSON", "subtask_multi_intent", "subtask_single_entity", "complexity_type_noise", "complexity_type_including_examples", "complexity_type_multiple_subtasks", "num_intents_5", "task_combination", "input_Freeform"]}, {"role": "robot", "chosen": "{\n    \"inquiryClasses\": [\n        \"OR37ART\",\n        \"OR89FRT\"\n    ],\n    \"inquiryEntities\": {\n        \"employeeRelative\": \"son\"\n    }\n}", "rejected": "{\n   \"inquiryClasses\": [\n      \"OR37ART\"\n   ],\n   \"inquiryEntities\": {\n      \"program\": \"Tuition Reimbursement\",\n      \"excludesGraduatePrograms\": \"false\"\n   }\n}", "model": "NOW_LLM_llama13b_convclass_dpo_12723_nonpairwise_loss"}]